{
    "create_table_historical_data": "CREATE TABLE historical_data (\n    id SERIAL PRIMARY KEY,\n    epoch BIGINT NOT NULL UNIQUE,\n    timestamp TIMESTAMP WITHOUT TIME ZONE NOT NULL,\n    open NUMERIC(10, 2) NOT NULL,\n    high NUMERIC(10, 2) NOT NULL,\n    low NUMERIC(10, 2) NOT NULL,\n    close NUMERIC(10, 2) NOT NULL,\n    volume NUMERIC(10, 6) NOT NULL\n);"
    ,"create_table_live_data": "CREATE TABLE live_data (\n    id SERIAL PRIMARY KEY,\n    epoch BIGINT NOT NULL UNIQUE,\n    timestamp TIMESTAMP WITHOUT TIME ZONE NOT NULL,\n    open NUMERIC(10, 2) NOT NULL,\n    high NUMERIC(10, 2) NOT NULL,\n    low NUMERIC(10, 2) NOT NULL,\n    close NUMERIC(10, 2) NOT NULL,\n    volume NUMERIC(10, 6) NOT NULL\n);"
    ,"truncate_table_live_data":"truncate table live_data"
    ,"truncate_table_historical_data":"truncate table historical_data"
    ,"create_view_data": "create or replace view data as (\n    select * from historical_data\n    union all\n    select * from live_data where epoch not in (\n        select epoch from historical_data\n    )\n)"
    ,"create_agg_view5": "create or replace view agg_view5 (start_epoch, end_epoch, start_time, end_time, open, close, low, high, volume) as (\n    WITH intervals AS (\n        SELECT \n            epoch/300*300 as start_epoch,\n            max(epoch) as end_epoch,\n            max(high) as high,\n            min(low)  as low,\n            sum(volume) as volume\n        FROM \n            data\n        GROUP BY \n            epoch/300*300\n    )\n    select i.start_epoch, i.end_epoch, to_timestamp(i.start_epoch) as start_time, to_timestamp(end_epoch) end_time,\n        sd.open as open, sdd.close as close, i.low as low, i.high as high, i.volume as volume\n        from intervals  i \n        left join data  sd \n            on i.start_epoch= sd.epoch\n        left join data sdd \n            on i.end_epoch = sdd.epoch\n);"
}
